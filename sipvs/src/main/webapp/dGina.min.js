// Input 0
'use strict';var ditec = ditec || {};
(function() {
  var DginaDLauncher = function(options, url) {
    ditec.AbstractLauncherWrapper.call(this, "D.Gina/XAdES Launcher", options, url);
  };
  ditec.utils.extendClass(DginaDLauncher, ditec.AbstractLauncherWrapper);
  DginaDLauncher.prototype.engineAuthenticate = function(challengeId, authDataObject, callback) {
    this._invokeMethod("dgina.authenticate", [challengeId, authDataObject], null, callback);
  };
  DginaDLauncher.prototype.engineSelectClientCertificate = function(callback) {
    this._invokeMethod("dgina.selectClientCertificate", [], null, callback);
  };
  DginaDLauncher.prototype.engineGetSignedXmlWithEnvelope = function(callback) {
    this._invokeMethod("dgina.getSignedXmlWithEnvelope", [], null, callback);
  };
  DginaDLauncher.prototype.engineGetSignedXmlWithEnvelopeBase64 = function(callback) {
    this._invokeMethod("dgina.getSignedXmlWithEnvelopeBase64", [], null, callback);
  };
  DginaDLauncher.prototype.engineGetSignedXmlWithEnvelopeGZipBase64 = function(callback) {
    this._invokeMethod("dgina.getSignedXmlWithEnvelopeGZipBase64", [], null, callback);
  };
  DginaDLauncher.prototype.engineGetClientCertificateBase64 = function(callback) {
    this._invokeMethod("dgina.getClientCertificateBase64", [], null, callback);
  };
  DginaDLauncher.prototype.engineGetSigningTime = function(callback) {
    this._invokeMethod("dgina.getSigningTime", [], "Date", callback);
  };
  DginaDLauncher.prototype.engineGetSignerIdentification = function(callback) {
    this._invokeMethod("dgina.getSignerIdentification", [], null, callback);
  };
  DginaDLauncher.prototype.engineSetCertificateFilter = function(filterID, callback) {
    this._invokeMethod("dgina.setCertificateFilter", [filterID], null, callback);
  };
  DginaDLauncher.prototype.engineSetLanguage = function(language, callback) {
    this._invokeMethod("dgina.setLanguage", [language], null, callback);
  };
  DginaDLauncher.prototype.engineGetVersion = function(callback) {
    this._invokeMethod("dgina.getVersion", [], null, callback);
  };
  DginaDLauncher.prototype.engineGetSigningCertificate = function(callback) {
    this._invokeMethod("dgina.getSigningCertificate", [], null, callback);
  };
  DginaDLauncher.prototype.engineLoadConfiguration = function(configsZipBase64, callback) {
    this._invokeMethod("dgina.loadConfiguration", [configsZipBase64], null, callback);
  };
  ditec.DginaDLauncherJava = function(options) {
    return DginaDLauncher.call(this, options, null);
  };
  ditec.utils.extendClass(ditec.DginaDLauncherJava, DginaDLauncher);
  ditec.DginaDLauncherDotNet = function(options) {
    ditec.AbstractDummyWrapper.call(this, "D.Gina/XAdES .NET", options, ".NET");
  };
  ditec.utils.extendClass(ditec.DginaDLauncherDotNet, ditec.AbstractDummyWrapper);
})();
// Input 1
var ditec = ditec || {};
(function() {
  ditec.DginaDotNet = function(options) {
    ditec.AbstractDummyWrapper.call(this, "D.Gina/XAdES .NET", options, ".NET");
  };
  ditec.utils.extendClass(ditec.DginaDotNet, ditec.AbstractDummyWrapper);
})();
// Input 2
var ditec = ditec || {};
ditec.DginaJava = function(options) {
  options = options || {};
  options["applet.attributes"] = options["applet.attributes"] || {};
  options["applet.attributes"]["code"] = options["applet.attributes"]["code"] || "sk.ditec.zep.dgina.xades.DginaApplet";
  ditec.AbstractJavaWrapper.call(this, "D.Gina/XAdES Java", options);
};
ditec.utils.extendClass(ditec.DginaJava, ditec.AbstractJavaWrapper);
ditec.DginaJava.prototype._checkInitialization = function() {
  this._core.getVersion(null);
};
ditec.DginaJava.prototype.engineAuthenticate = function(challengeId, authDataObject, callback) {
  var self = this;
  this._core.authenticate(challengeId, authDataObject, new this._JavaCallback(callback, function(rc) {
    if (rc != 0) {
      self._fireDitecError(callback, new Error, rc, self._core);
      return;
    }
    this._return(rc);
  }));
};
ditec.DginaJava.prototype.engineSelectClientCertificate = function(callback) {
  var self = this;
  this._core.selectClientCertificate(new this._JavaCallback(callback, function(rc) {
    if (rc != 0) {
      self._fireDitecError(callback, new Error, rc, self._core);
      return;
    }
    this._return(rc);
  }));
};
ditec.DginaJava.prototype.engineGetSignedXmlWithEnvelope = function(callback) {
  var self = this;
  this._core.getSignedXmlWithEnvelope(new this._JavaCallback(callback, function(ret) {
    this._return(ret.str());
  }));
};
ditec.DginaJava.prototype.engineGetSignedXmlWithEnvelopeBase64 = function(callback) {
  var self = this;
  this._core.getSignedXmlWithEnvelopeBase64(new this._JavaCallback(callback, function(ret) {
    this._return(ret.str());
  }));
};
ditec.DginaJava.prototype.engineGetSignedXmlWithEnvelopeGZipBase64 = function(callback) {
  var self = this;
  this._core.getSignedXmlWithEnvelopeGZipBase64(new this._JavaCallback(callback, function(ret) {
    this._return(ret.str());
  }));
};
ditec.DginaJava.prototype.engineGetClientCertificateBase64 = function(callback) {
  var self = this;
  this._core.getClientCertificateBase64(new this._JavaCallback(callback, function(ret) {
    this._return(ret.str());
  }));
};
ditec.DginaJava.prototype.engineGetSigningTime = function(callback) {
  var self = this;
  this._core.getSigningTime(new this._JavaCallback(callback, function(ret) {
    this._return(ret);
  }));
};
ditec.DginaJava.prototype.engineGetSignerIdentification = function(callback) {
  var self = this;
  this._core.getSignerIdentification(new this._JavaCallback(callback, function(ret) {
    this._return(ret.str());
  }));
};
ditec.DginaJava.prototype.engineSetCertificateFilter = function(filterID, callback) {
  var self = this;
  this._core.setCertificateFilter(filterID);
  callback.onSuccess();
};
ditec.DginaJava.prototype.engineSetLanguage = function(language, callback) {
  var self = this;
  this._core.setLanguage(language, new this._JavaCallback(callback, function(ret) {
    if (ret == null) {
      self._fireDitecError(callback, new Error, ret, self._core);
      return;
    }
    this._return(ret);
  }));
};
ditec.DginaJava.prototype.engineGetVersion = function(callback) {
  var self = this;
  this._core.getVersion(new this._JavaCallback(callback, function(ret) {
    if (ret == null) {
      self._fireDitecError(callback, new Error, ret, self._core);
      return;
    }
    this._return(ret.str());
  }));
};
ditec.DginaJava.prototype.engineGetSigningCertificate = function(callback) {
  var self = this;
  this._core.getSigningCertificate(new this._JavaCallback(callback, function(ret) {
    this._return(ret.str());
  }));
};
ditec.DginaJava.prototype.engineLoadConfiguration = function(configsZipBase64, callback) {
  var self = this;
  configsZipBase64 = this._wrapString(configsZipBase64);
  this._core.loadConfiguration(configsZipBase64, new this._JavaCallback(callback, function(ret) {
    if (ret != 0) {
      self._fireDitecError(callback, new Error, ret, self._core);
      return;
    }
    this._return(ret);
  }));
};
// Input 3
var ditec = ditec || {};
(function() {
  var DginaJs = function() {
    var spiMap = {};
    spiMap[ditec.AbstractJsCore.PLATFORM_JAVA] = ditec.DginaJava;
    spiMap[ditec.AbstractJsCore.PLATFORM_DOT_NET] = ditec.DginaDotNet;
    spiMap[ditec.AbstractJsCore.PLATFORM_DLAUNCHER_JAVA] = ditec.DginaDLauncherJava;
    spiMap[ditec.AbstractJsCore.PLATFORM_DLAUNCHER_DOT_NET] = ditec.DginaDLauncherDotNet;
    ditec.config = ditec.config || {};
    ditec.AbstractJsCore.call(this, "D.Gina/XAdES", spiMap, ditec.config.dGinaJs);
  };
  DginaJs.ERROR_SIGNING_CANCELLED = 1;
  DginaJs.LANG_SK = "SK";
  DginaJs.LANG_EN = "EN";
  ditec.utils.extendClass(DginaJs, ditec.AbstractJsCore);
  DginaJs.prototype.detectSupportedPlatforms = function(platforms, callback) {
    ditec.AbstractJsCore.prototype.detectSupportedPlatforms.call(this, platforms, {onSuccess:function(ret) {
      var ret2 = [];
      for (var i = 0;i < ret.length;i++) {
        var p = ret[i];
        switch(p) {
          case ditec.AbstractJsCore.PLATFORM_DLAUNCHER_DOT_NET:
          ;
          case ditec.AbstractJsCore.PLATFORM_DOT_NET:
            break;
          default:
            ret2.push(p);
        }
      }
      callback.onSuccess(ret2);
    }, onError:function(e) {
      callback.onError(e);
    }});
  };
  DginaJs.prototype.initialize = function(callback) {
  };
  DginaJs.prototype.authenticate = function(challengeId, authDataObject, callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._validateParameter(challengeId, "challengeId", "short_string");
      this._validateParameter(authDataObject, "authDataObject", "string");
      this._spi.engineAuthenticate(challengeId, authDataObject, wCallback);
    });
  };
  DginaJs.prototype.selectClientCertificate = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineSelectClientCertificate(wCallback);
    });
  };
  DginaJs.prototype.getSignedXmlWithEnvelope = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineGetSignedXmlWithEnvelope(wCallback);
    });
  };
  DginaJs.prototype.getSignedXmlWithEnvelopeBase64 = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineGetSignedXmlWithEnvelopeBase64(wCallback);
    });
  };
  DginaJs.prototype.getSignedXmlWithEnvelopeGZipBase64 = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineGetSignedXmlWithEnvelopeGZipBase64(wCallback);
    });
  };
  DginaJs.prototype.getClientCertificateBase64 = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineGetClientCertificateBase64(wCallback);
    });
  };
  DginaJs.prototype.getSigningTime = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineGetSigningTime(wCallback);
    });
  };
  DginaJs.prototype.getSignerIdentification = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineGetSignerIdentification(wCallback);
    });
  };
  DginaJs.prototype.setCertificateFilter = function(filterID, callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._validateParameter(filterID, "filterID", "short_string");
      this._spi.engineSetCertificateFilter(filterID, wCallback);
    });
  };
  DginaJs.prototype.setLanguage = function(language, callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._validateParameter(language, "language", "short_string");
      this._spi.engineSetLanguage(language, wCallback);
    });
  };
  DginaJs.prototype.getVersion = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineGetVersion(wCallback);
    });
  };
  DginaJs.prototype.getSigningCertificate = function(callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._spi.engineGetSigningCertificate(wCallback);
    });
  };
  DginaJs.prototype.loadConfiguration = function(configsZipBase64, callback) {
    this._wrapFunction(callback, function(wCallback) {
      this._validateParameter(configsZipBase64, "configsZipBase64", "string");
      this._spi.engineLoadConfiguration(configsZipBase64, wCallback);
    });
  };
  ditec.dGinaJs = new DginaJs;
})();
// Input 4
var ditec = ditec || {};
ditec.versions = ditec.versions || {};
ditec.versions.dGina = "1.5.0.0";

